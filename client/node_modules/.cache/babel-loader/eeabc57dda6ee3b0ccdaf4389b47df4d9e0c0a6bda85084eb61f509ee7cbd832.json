{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heret\\\\OneDrive\\\\Desktop\\\\api\\\\frontend-google-form\\\\src\\\\components\\\\pages\\\\EditForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { PlusCircleIcon, TrashIcon } from '@heroicons/react/outline';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CreateFormAPI, updateFormAPI, GetFormAPI } from '../../utils/APIRoutes';\nimport callAPI from '../../utils/fetchData';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditForm(_ref) {\n  _s();\n  let {\n    setFormData\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: 'colored',\n    draggable: true\n  };\n  const [title, setTitle] = useState('Untitled Form');\n  const [description, setDescription] = useState('Form Description');\n  const [formContent, setFormContent] = useState([]);\n  const [onEdit, setOnEdit] = useState(false);\n  const [textField, setTextField] = useState('');\n  const [editedField, setEditedField] = useState('');\n\n  // let user;\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      navigate('/login');\n    }\n    const fetchForm = async () => {\n      const form = await callAPI(`${GetFormAPI}/${id}`, 'GET', user.token);\n      if (form.status == true) {\n        setTitle(form.form.title);\n        setDescription(form.form.description);\n        setFormContent(form.form.formFields);\n        console.log(form.form);\n      }\n    };\n    fetchForm();\n  }, []);\n  const addQuestion = () => {\n    const field = {\n      name: `question_${formContent.length}${Math.floor(Math.random() * 9999)}`,\n      label: 'Untitled question',\n      required: false,\n      question_type: 'short_answer',\n      // \"paragraph\", \"multichoice\",\n      list: [],\n      value: ''\n    };\n    setFormContent([...formContent, field]);\n  };\n  const editField = (fieldName, fieldLabel) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      formFields[fieldIndex].label = fieldLabel;\n      setFormContent(formFields);\n    }\n  };\n  const editFieldType = (fieldName, fieldLabel) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      formFields[fieldIndex].question_type = fieldLabel;\n      setFormContent(formFields);\n    }\n  };\n  const addFieldOption = (fieldName, option) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      if (option && option != '') {\n        formFields[fieldIndex].list.push(option);\n        setFormContent(formFields);\n        setTextField('');\n      }\n    }\n  };\n  const removeField = fieldName => {\n    const formFields = [...formContent];\n    const fields = formFields.filter(formField => formField.name !== fieldName);\n    if (fields.length > 0) {\n      setFormContent(fields);\n    } else {\n      alert('There must be at least one question');\n    }\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      navigate('/login');\n    }\n    const response = await fetch(`${updateFormAPI}/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        formFields: formContent\n      })\n    });\n    const data = await response.json();\n    if (data.status === true) {\n      navigate('/forms');\n      toast.success(data.message, toastOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex flex-col justify-start items-center px-4 h-screen sm:w-4/5 space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col px-4 bg-white rounded-md justify-center item-start w-full shadow-sm border-indigo-800 border-t-8 space-y-2 h-24\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-3xl font-semibold\",\n          placeholder: \"\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"text-gray-500/80\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" relative flex flex-col w-full space-y-4\",\n        children: [formContent.map(field => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rounded-md bg-white flex w-full shadow-md px-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block text-sm font-medium text-gray-700 capitalize\",\n                  children: onEdit && editedField === field.name ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"border border-black\",\n                    value: field.label,\n                    onChange: e => editField(field.name, e.target.value),\n                    onBlur: () => {\n                      setOnEdit(false);\n                      setEditedField('');\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                    onClick: () => {\n                      setOnEdit(true);\n                      setEditedField(field.name);\n                    },\n                    children: field.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 49\n                  }, this)\n                }, field.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    onChange: e => editFieldType(field.name, e.target.value),\n                    value: field.question_type,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"short_answer\",\n                      children: \"Short Answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"paragraph\",\n                      children: \"Paragraph\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"multichoice\",\n                      children: \"Multichoice\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-4 w-full\",\n                children: [field.question_type == 'short_answer' && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                  placeholder: field.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 45\n                }, this), field.question_type == 'paragraph' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: 4,\n                  className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                  placeholder: field.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this), field.question_type == 'multichoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"my-4 flex flex-col space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                    children: field.list.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: item,\n                      children: item\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      onChange: e => setTextField(e.target.value),\n                      value: textField,\n                      placeholder: \"Add an option\",\n                      className: \"flex-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"bg-indigo-700 block hover:bg-indigo-900 text-white px-4\",\n                      onClick: () => addFieldOption(field.name, textField),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeField(field.name),\n                  children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                    className: \" w-6 h-8 text-gray-400 hover:text-indigo-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, field.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" absolute space-y-1 top-0 -right-6 sm:-right-14 flex flex-col justify-between items-center bg-white p-2 rounded-md shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addQuestion(),\n            children: /*#__PURE__*/_jsxDEV(PlusCircleIcon, {\n              className: \"w-6 h-6 sm:w-8 sm:h-8 text-gray-400 hover:text-indigo-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mb-4 bg-indigo-600 px-4 py-2 hover:bg-indigo-700 rounded-md text-white\",\n          type: \"submit\",\n          onClick: e => submitForm(e),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditForm, \"H3dUFW91Xdyb1bXu7r5jOTLej8k=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useParams","PlusCircleIcon","TrashIcon","toast","ToastContainer","CreateFormAPI","updateFormAPI","GetFormAPI","callAPI","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","EditForm","_ref","_s","setFormData","id","navigate","toastOptions","position","autoClose","pauseOnHover","theme","draggable","title","setTitle","description","setDescription","formContent","setFormContent","onEdit","setOnEdit","textField","setTextField","editedField","setEditedField","user","JSON","parse","localStorage","getItem","fetchForm","form","token","status","formFields","console","log","addQuestion","field","name","length","Math","floor","random","label","required","question_type","list","value","editField","fieldName","fieldLabel","fieldIndex","findIndex","f","editFieldType","addFieldOption","option","push","removeField","fields","filter","formField","alert","submitForm","e","preventDefault","response","fetch","method","headers","Authorization","body","stringify","data","json","success","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","target","map","onBlur","onClick","rows","item","_c","$RefreshReg$"],"sources":["C:/Users/heret/OneDrive/Desktop/api/frontend-google-form/src/components/pages/EditForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { PlusCircleIcon, TrashIcon } from '@heroicons/react/outline';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    CreateFormAPI,\r\n    updateFormAPI,\r\n    GetFormAPI,\r\n} from '../../utils/APIRoutes';\r\nimport callAPI from '../../utils/fetchData';\r\nimport Navbar from './Navbar';\r\n\r\nexport default function EditForm({ setFormData }) {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const toastOptions = {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: 'colored',\r\n        draggable: true,\r\n    };\r\n    const [title, setTitle] = useState('Untitled Form');\r\n    const [description, setDescription] = useState('Form Description');\r\n    const [formContent, setFormContent] = useState([]);\r\n    const [onEdit, setOnEdit] = useState(false);\r\n    const [textField, setTextField] = useState('');\r\n    const [editedField, setEditedField] = useState('');\r\n\r\n    // let user;\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n            navigate('/login');\r\n        }\r\n\r\n        const fetchForm = async () => {\r\n            const form = await callAPI(\r\n                `${GetFormAPI}/${id}`,\r\n                'GET',\r\n                user.token\r\n            );\r\n            if (form.status == true) {\r\n                setTitle(form.form.title);\r\n                setDescription(form.form.description);\r\n                setFormContent(form.form.formFields);\r\n                console.log(form.form);\r\n            }\r\n        };\r\n        fetchForm();\r\n    }, []);\r\n\r\n    const addQuestion = () => {\r\n        const field = {\r\n            name: `question_${formContent.length}${Math.floor(\r\n                Math.random() * 9999\r\n            )}`,\r\n            label: 'Untitled question',\r\n            required: false,\r\n            question_type: 'short_answer', // \"paragraph\", \"multichoice\",\r\n            list: [],\r\n            value: '',\r\n        };\r\n        setFormContent([...formContent, field]);\r\n    };\r\n\r\n    const editField = (fieldName, fieldLabel) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            formFields[fieldIndex].label = fieldLabel;\r\n            setFormContent(formFields);\r\n        }\r\n    };\r\n\r\n    const editFieldType = (fieldName, fieldLabel) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            formFields[fieldIndex].question_type = fieldLabel;\r\n            setFormContent(formFields);\r\n        }\r\n    };\r\n\r\n    const addFieldOption = (fieldName, option) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            if (option && option != '') {\r\n                formFields[fieldIndex].list.push(option);\r\n                setFormContent(formFields);\r\n                setTextField('');\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeField = (fieldName) => {\r\n        const formFields = [...formContent];\r\n        const fields = formFields.filter(\r\n            (formField) => formField.name !== fieldName\r\n        );\r\n        if (fields.length > 0) {\r\n            setFormContent(fields);\r\n        } else {\r\n            alert('There must be at least one question');\r\n        }\r\n    };\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n            navigate('/login');\r\n        }\r\n\r\n        const response = await fetch(`${updateFormAPI}/${id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                description,\r\n                formFields: formContent,\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.status === true) {\r\n            navigate('/forms');\r\n            toast.success(data.message, toastOptions);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {' '}\r\n            <Navbar />\r\n            <div className=\"container mx-auto flex flex-col justify-start items-center px-4 h-screen sm:w-4/5 space-y-4\">\r\n                <div className=\"flex flex-col px-4 bg-white rounded-md justify-center item-start w-full shadow-sm border-indigo-800 border-t-8 space-y-2 h-24\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"text-3xl font-semibold\"\r\n                        placeholder=\"\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"text-gray-500/80\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\" relative flex flex-col w-full space-y-4\">\r\n                    {formContent.map((field) => {\r\n                        return (\r\n                            <div\r\n                                key={field.name}\r\n                                className=\"rounded-md bg-white flex w-full shadow-md px-4\"\r\n                            >\r\n                                <div className=\"flex flex-col w-full\">\r\n                                    <div className=\"flex justify-between items-center space-y-2\">\r\n                                        <div\r\n                                            key={field.name}\r\n                                            className=\"block text-sm font-medium text-gray-700 capitalize\"\r\n                                        >\r\n                                            {onEdit &&\r\n                                            editedField === field.name ? (\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"border border-black\"\r\n                                                    value={field.label}\r\n                                                    onChange={(e) =>\r\n                                                        editField(\r\n                                                            field.name,\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    onBlur={() => {\r\n                                                        setOnEdit(false);\r\n                                                        setEditedField('');\r\n                                                    }}\r\n                                                />\r\n                                            ) : (\r\n                                                <label\r\n                                                    onClick={() => {\r\n                                                        setOnEdit(true);\r\n                                                        setEditedField(\r\n                                                            field.name\r\n                                                        );\r\n                                                    }}\r\n                                                >\r\n                                                    {field.label}\r\n                                                </label>\r\n                                            )}\r\n                                        </div>\r\n                                        <div>\r\n                                            <select\r\n                                                onChange={(e) =>\r\n                                                    editFieldType(\r\n                                                        field.name,\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                                value={field.question_type}\r\n                                            >\r\n                                                <option value=\"short_answer\">\r\n                                                    Short Answer\r\n                                                </option>\r\n                                                <option value=\"paragraph\">\r\n                                                    Paragraph\r\n                                                </option>\r\n                                                <option value=\"multichoice\">\r\n                                                    Multichoice\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"my-4 w-full\">\r\n                                        {field.question_type ==\r\n                                            'short_answer' && (\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"px-5 shadow-sm h-10 rounded-md block w-full\"\r\n                                                placeholder={field.label}\r\n                                            />\r\n                                        )}\r\n                                        {field.question_type == 'paragraph' && (\r\n                                            <textarea\r\n                                                rows={4}\r\n                                                className=\"px-5 shadow-sm h-10 rounded-md block w-full\"\r\n                                                placeholder={field.label}\r\n                                            />\r\n                                        )}\r\n                                        {field.question_type ==\r\n                                            'multichoice' && (\r\n                                            <div className=\"my-4 flex flex-col space-y-2\">\r\n                                                <select className=\"px-5 shadow-sm h-10 rounded-md block w-full\">\r\n                                                    {field.list.map((item) => (\r\n                                                        <option\r\n                                                            key={item}\r\n                                                            value={item}\r\n                                                        >\r\n                                                            {item}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                <div className=\"flex space-between\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        onChange={(e) =>\r\n                                                            setTextField(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                        value={textField}\r\n                                                        placeholder=\"Add an option\"\r\n                                                        className=\"flex-1\"\r\n                                                    />\r\n                                                    <button\r\n                                                        className=\"bg-indigo-700 block hover:bg-indigo-900 text-white px-4\"\r\n                                                        onClick={() =>\r\n                                                            addFieldOption(\r\n                                                                field.name,\r\n                                                                textField\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Add\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                removeField(field.name)\r\n                                            }\r\n                                        >\r\n                                            <TrashIcon className=\" w-6 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    <div className=\" absolute space-y-1 top-0 -right-6 sm:-right-14 flex flex-col justify-between items-center bg-white p-2 rounded-md shadow-md\">\r\n                        <button onClick={() => addQuestion()}>\r\n                            <PlusCircleIcon className=\"w-6 h-6 sm:w-8 sm:h-8 text-gray-400 hover:text-indigo-500\" />\r\n                        </button>\r\n                        {/* <button onClick={() => addQuestion()}>\r\n                        <PlusCircleIcon className=\"w-8 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                    </button>\r\n                    <button onClick={() => addQuestion()}>\r\n                        <PlusCircleIcon className=\"w-8 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                    </button> */}\r\n                    </div>\r\n                    <button\r\n                        className=\"mb-4 bg-indigo-600 px-4 py-2 hover:bg-indigo-700 rounded-md text-white\"\r\n                        type=\"submit\"\r\n                        onClick={(e) => submitForm(e)}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,SAASC,cAAc,EAAEC,SAAS,QAAQ,0BAA0B;AACpE,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SACIC,aAAa,EACbC,aAAa,EACbC,UAAU,QACP,uBAAuB;AAC9B,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC5C,MAAM;IAAEG;EAAG,CAAC,GAAGlB,SAAS,EAAE;EAC1B,MAAMmB,QAAQ,GAAGpB,WAAW,EAAE;EAC9B,MAAMqB,YAAY,GAAG;IACjBC,QAAQ,EAAE,cAAc;IACxBC,SAAS,EAAE,IAAI;IACfC,YAAY,EAAE,IAAI;IAClBC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE;EACf,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,eAAe,CAAC;EACnD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,kBAAkB,CAAC;EAClE,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAM0C,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,EAAE;MACPnB,QAAQ,CAAC,QAAQ,CAAC;IACtB;IAEA,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAG,MAAMpC,OAAO,CACrB,GAAED,UAAW,IAAGW,EAAG,EAAC,EACrB,KAAK,EACLoB,IAAI,CAACO,KAAK,CACb;MACD,IAAID,IAAI,CAACE,MAAM,IAAI,IAAI,EAAE;QACrBnB,QAAQ,CAACiB,IAAI,CAACA,IAAI,CAAClB,KAAK,CAAC;QACzBG,cAAc,CAACe,IAAI,CAACA,IAAI,CAAChB,WAAW,CAAC;QACrCG,cAAc,CAACa,IAAI,CAACA,IAAI,CAACG,UAAU,CAAC;QACpCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACA,IAAI,CAAC;MAC1B;IACJ,CAAC;IACDD,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG;MACVC,IAAI,EAAG,YAAWtB,WAAW,CAACuB,MAAO,GAAEC,IAAI,CAACC,KAAK,CAC7CD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CACtB,EAAC;MACHC,KAAK,EAAE,mBAAmB;MAC1BC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,cAAc;MAAE;MAC/BC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACX,CAAC;IACD9B,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEqB,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMW,SAAS,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IACzC,MAAMjB,UAAU,GAAG,CAAC,GAAGjB,WAAW,CAAC;IACnC,MAAMmC,UAAU,GAAGlB,UAAU,CAACmB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACf,IAAI,KAAKW,SAAS,CAAC;IACpE,IAAIE,UAAU,GAAG,CAAC,CAAC,EAAE;MACjBlB,UAAU,CAACkB,UAAU,CAAC,CAACR,KAAK,GAAGO,UAAU;MACzCjC,cAAc,CAACgB,UAAU,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMqB,aAAa,GAAGA,CAACL,SAAS,EAAEC,UAAU,KAAK;IAC7C,MAAMjB,UAAU,GAAG,CAAC,GAAGjB,WAAW,CAAC;IACnC,MAAMmC,UAAU,GAAGlB,UAAU,CAACmB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACf,IAAI,KAAKW,SAAS,CAAC;IACpE,IAAIE,UAAU,GAAG,CAAC,CAAC,EAAE;MACjBlB,UAAU,CAACkB,UAAU,CAAC,CAACN,aAAa,GAAGK,UAAU;MACjDjC,cAAc,CAACgB,UAAU,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMsB,cAAc,GAAGA,CAACN,SAAS,EAAEO,MAAM,KAAK;IAC1C,MAAMvB,UAAU,GAAG,CAAC,GAAGjB,WAAW,CAAC;IACnC,MAAMmC,UAAU,GAAGlB,UAAU,CAACmB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACf,IAAI,KAAKW,SAAS,CAAC;IACpE,IAAIE,UAAU,GAAG,CAAC,CAAC,EAAE;MACjB,IAAIK,MAAM,IAAIA,MAAM,IAAI,EAAE,EAAE;QACxBvB,UAAU,CAACkB,UAAU,CAAC,CAACL,IAAI,CAACW,IAAI,CAACD,MAAM,CAAC;QACxCvC,cAAc,CAACgB,UAAU,CAAC;QAC1BZ,YAAY,CAAC,EAAE,CAAC;MACpB;IACJ;EACJ,CAAC;EAED,MAAMqC,WAAW,GAAIT,SAAS,IAAK;IAC/B,MAAMhB,UAAU,GAAG,CAAC,GAAGjB,WAAW,CAAC;IACnC,MAAM2C,MAAM,GAAG1B,UAAU,CAAC2B,MAAM,CAC3BC,SAAS,IAAKA,SAAS,CAACvB,IAAI,KAAKW,SAAS,CAC9C;IACD,IAAIU,MAAM,CAACpB,MAAM,GAAG,CAAC,EAAE;MACnBtB,cAAc,CAAC0C,MAAM,CAAC;IAC1B,CAAC,MAAM;MACHG,KAAK,CAAC,qCAAqC,CAAC;IAChD;EACJ,CAAC;EACD,MAAMC,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMzC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,EAAE;MACPnB,QAAQ,CAAC,QAAQ,CAAC;IACtB;IAEA,MAAM6D,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE3E,aAAc,IAAGY,EAAG,EAAC,EAAE;MACnDgE,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAAS9C,IAAI,CAACO,KAAM;MACxC,CAAC;MACDwC,IAAI,EAAE9C,IAAI,CAAC+C,SAAS,CAAC;QACjB5D,KAAK;QACLE,WAAW;QACXmB,UAAU,EAAEjB;MAChB,CAAC;IACL,CAAC,CAAC;IACF,MAAMyD,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,IAAID,IAAI,CAACzC,MAAM,KAAK,IAAI,EAAE;MACtB3B,QAAQ,CAAC,QAAQ,CAAC;MAClBhB,KAAK,CAACsF,OAAO,CAACF,IAAI,CAACG,OAAO,EAAEtE,YAAY,CAAC;IAC7C;EACJ,CAAC;EACD,oBACIT,OAAA,CAAAE,SAAA;IAAA8E,QAAA,GACK,GAAG,eACJhF,OAAA,CAACF,MAAM;MAAAmF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVpF,OAAA;MAAKqF,SAAS,EAAC,6FAA6F;MAAAL,QAAA,gBACxGhF,OAAA;QAAKqF,SAAS,EAAC,+HAA+H;QAAAL,QAAA,gBAC1IhF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACXD,SAAS,EAAC,wBAAwB;UAClCE,WAAW,EAAC,EAAE;UACdrC,KAAK,EAAEnC,KAAM;UACbyE,QAAQ,EAAGrB,CAAC,IAAKnD,QAAQ,CAACmD,CAAC,CAACsB,MAAM,CAACvC,KAAK;QAAE;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5C,eACFpF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACXD,SAAS,EAAC,kBAAkB;UAC5BnC,KAAK,EAAEjC,WAAY;UACnBuE,QAAQ,EAAGrB,CAAC,IAAKjD,cAAc,CAACiD,CAAC,CAACsB,MAAM,CAACvC,KAAK;QAAE;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eAENpF,OAAA;QAAKqF,SAAS,EAAC,0CAA0C;QAAAL,QAAA,GACpD7D,WAAW,CAACuE,GAAG,CAAElD,KAAK,IAAK;UACxB,oBACIxC,OAAA;YAEIqF,SAAS,EAAC,gDAAgD;YAAAL,QAAA,eAE1DhF,OAAA;cAAKqF,SAAS,EAAC,sBAAsB;cAAAL,QAAA,gBACjChF,OAAA;gBAAKqF,SAAS,EAAC,6CAA6C;gBAAAL,QAAA,gBACxDhF,OAAA;kBAEIqF,SAAS,EAAC,oDAAoD;kBAAAL,QAAA,EAE7D3D,MAAM,IACPI,WAAW,KAAKe,KAAK,CAACC,IAAI,gBACtBzC,OAAA;oBACIsF,IAAI,EAAC,MAAM;oBACXD,SAAS,EAAC,qBAAqB;oBAC/BnC,KAAK,EAAEV,KAAK,CAACM,KAAM;oBACnB0C,QAAQ,EAAGrB,CAAC,IACRhB,SAAS,CACLX,KAAK,CAACC,IAAI,EACV0B,CAAC,CAACsB,MAAM,CAACvC,KAAK,CAErB;oBACDyC,MAAM,EAAEA,CAAA,KAAM;sBACVrE,SAAS,CAAC,KAAK,CAAC;sBAChBI,cAAc,CAAC,EAAE,CAAC;oBACtB;kBAAE;oBAAAuD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACJ,gBAEFpF,OAAA;oBACI4F,OAAO,EAAEA,CAAA,KAAM;sBACXtE,SAAS,CAAC,IAAI,CAAC;sBACfI,cAAc,CACVc,KAAK,CAACC,IAAI,CACb;oBACL,CAAE;oBAAAuC,QAAA,EAEDxC,KAAK,CAACM;kBAAK;oBAAAmC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAEnB,GA/BI5C,KAAK,CAACC,IAAI;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAgCb,eACNpF,OAAA;kBAAAgF,QAAA,eACIhF,OAAA;oBACIwF,QAAQ,EAAGrB,CAAC,IACRV,aAAa,CACTjB,KAAK,CAACC,IAAI,EACV0B,CAAC,CAACsB,MAAM,CAACvC,KAAK,CAErB;oBACDA,KAAK,EAAEV,KAAK,CAACQ,aAAc;oBAAAgC,QAAA,gBAE3BhF,OAAA;sBAAQkD,KAAK,EAAC,cAAc;sBAAA8B,QAAA,EAAC;oBAE7B;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAS,eACTpF,OAAA;sBAAQkD,KAAK,EAAC,WAAW;sBAAA8B,QAAA,EAAC;oBAE1B;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAS,eACTpF,OAAA;sBAAQkD,KAAK,EAAC,aAAa;sBAAA8B,QAAA,EAAC;oBAE5B;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAS;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBACJ;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACJ,eAENpF,OAAA;gBAAKqF,SAAS,EAAC,aAAa;gBAAAL,QAAA,GACvBxC,KAAK,CAACQ,aAAa,IAChB,cAAc,iBACdhD,OAAA;kBACIsF,IAAI,EAAC,MAAM;kBACXD,SAAS,EAAC,6CAA6C;kBACvDE,WAAW,EAAE/C,KAAK,CAACM;gBAAM;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAEhC,EACA5C,KAAK,CAACQ,aAAa,IAAI,WAAW,iBAC/BhD,OAAA;kBACI6F,IAAI,EAAE,CAAE;kBACRR,SAAS,EAAC,6CAA6C;kBACvDE,WAAW,EAAE/C,KAAK,CAACM;gBAAM;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAEhC,EACA5C,KAAK,CAACQ,aAAa,IAChB,aAAa,iBACbhD,OAAA;kBAAKqF,SAAS,EAAC,8BAA8B;kBAAAL,QAAA,gBACzChF,OAAA;oBAAQqF,SAAS,EAAC,6CAA6C;oBAAAL,QAAA,EAC1DxC,KAAK,CAACS,IAAI,CAACyC,GAAG,CAAEI,IAAI,iBACjB9F,OAAA;sBAEIkD,KAAK,EAAE4C,IAAK;sBAAAd,QAAA,EAEXc;oBAAI,GAHAA,IAAI;sBAAAb,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAKhB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACG,eACTpF,OAAA;oBAAKqF,SAAS,EAAC,oBAAoB;oBAAAL,QAAA,gBAC/BhF,OAAA;sBACIsF,IAAI,EAAC,MAAM;sBACXE,QAAQ,EAAGrB,CAAC,IACR3C,YAAY,CACR2C,CAAC,CAACsB,MAAM,CAACvC,KAAK,CAErB;sBACDA,KAAK,EAAE3B,SAAU;sBACjBgE,WAAW,EAAC,eAAe;sBAC3BF,SAAS,EAAC;oBAAQ;sBAAAJ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QACpB,eACFpF,OAAA;sBACIqF,SAAS,EAAC,yDAAyD;sBACnEO,OAAO,EAAEA,CAAA,KACLlC,cAAc,CACVlB,KAAK,CAACC,IAAI,EACVlB,SAAS,CAEhB;sBAAAyD,QAAA,EACJ;oBAED;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAAS;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACP;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAEb;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACC,eACNpF,OAAA;gBAAKqF,SAAS,EAAC,YAAY;gBAAAL,QAAA,eACvBhF,OAAA;kBACI4F,OAAO,EAAEA,CAAA,KACL/B,WAAW,CAACrB,KAAK,CAACC,IAAI,CACzB;kBAAAuC,QAAA,eAEDhF,OAAA,CAACT,SAAS;oBAAC8F,SAAS,EAAC;kBAA8C;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAG;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACjE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACP;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACJ,GA/HD5C,KAAK,CAACC,IAAI;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAgIb;QAEd,CAAC,CAAC,eACFpF,OAAA;UAAKqF,SAAS,EAAC,8HAA8H;UAAAL,QAAA,eACzIhF,OAAA;YAAQ4F,OAAO,EAAEA,CAAA,KAAMrD,WAAW,EAAG;YAAAyC,QAAA,eACjChF,OAAA,CAACV,cAAc;cAAC+F,SAAS,EAAC;YAA2D;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAG;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACnF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOP,eACNpF,OAAA;UACIqF,SAAS,EAAC,wEAAwE;UAClFC,IAAI,EAAC,QAAQ;UACbM,OAAO,EAAGzB,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;UAAAa,QAAA,EACjC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACP,eAENpF,OAAA,CAACP,cAAc;QAAAwF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB;EAAA,gBACP;AAEX;AAAC/E,EAAA,CA5SuBF,QAAQ;EAAA,QACbd,SAAS,EACPD,WAAW;AAAA;AAAA2G,EAAA,GAFR5F,QAAQ;AAAA,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}