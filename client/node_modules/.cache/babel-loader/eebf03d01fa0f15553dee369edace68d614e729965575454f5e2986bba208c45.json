{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heret\\\\OneDrive\\\\Desktop\\\\api\\\\frontend-google-form\\\\src\\\\components\\\\pages\\\\EditForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { CreateResponseFormAPI, GetFormAPI } from '../../utils/APIRoutes';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditForm() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [elements, setElements] = useState(null);\n  const [values, setValues] = useState({});\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: 'colored',\n    draggable: true\n  };\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      navigate('/login');\n    }\n    if (!user.formId) {\n      navigate('/form');\n    }\n    async function fetchFormData() {\n      const response = await fetch(`${GetFormAPI}/${id}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const form = await response.json();\n      if (form.status === true) {\n        setElements(form.form);\n      } else {\n        toast.error(form.message, toastOptions);\n        if (form.message === 'Unauthorized') {\n          navigate('/login');\n        }\n      }\n    }\n    fetchFormData();\n  }, []);\n  const changeHandle = (e, label) => {\n    const {\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [label]: value\n    });\n  };\n  async function handleSubmit(event) {\n    event.preventDefault();\n    let data = [];\n    data.push(values);\n    const user = JSON.parse(localStorage.getItem('user'));\n    const response = await fetch(CreateResponseFormAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        answers: data,\n        userId: user.userId,\n        formId: user.formId\n      })\n    });\n    const responseForm = await response.json();\n    if (!responseForm.status) {\n      toast.error(responseForm.message, toastOptions);\n    } else {\n      toast.success(responseForm.message, toastOptions);\n      console.log(responseForm);\n    }\n\n    // console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditForm, \"FU4L7XWzpeezn7Rr6rMEESwo4hQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","CreateResponseFormAPI","GetFormAPI","toast","ToastContainer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","EditForm","_s","id","elements","setElements","values","setValues","navigate","toastOptions","position","autoClose","pauseOnHover","theme","draggable","user","JSON","parse","localStorage","getItem","formId","fetchFormData","response","fetch","method","headers","Authorization","token","form","json","status","error","message","changeHandle","e","label","value","target","handleSubmit","event","preventDefault","data","push","body","stringify","answers","userId","responseForm","success","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/heret/OneDrive/Desktop/api/frontend-google-form/src/components/pages/EditForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { CreateResponseFormAPI, GetFormAPI } from '../../utils/APIRoutes';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbar from './Navbar';\r\n\r\nexport default function EditForm() {\r\n    const { id } = useParams();\r\n\r\n    const [elements, setElements] = useState(null);\r\n\r\n    const [values, setValues] = useState({});\r\n    const navigate = useNavigate();\r\n    const toastOptions = {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: 'colored',\r\n        draggable: true,\r\n    };\r\n\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n            navigate('/login');\r\n        }\r\n        if (!user.formId) {\r\n            navigate('/form');\r\n        }\r\n\r\n        async function fetchFormData() {\r\n            const response = await fetch(`${GetFormAPI}/${id}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            });\r\n\r\n            const form = await response.json();\r\n            if (form.status === true) {\r\n                setElements(form.form);\r\n            } else {\r\n                toast.error(form.message, toastOptions);\r\n                if (form.message === 'Unauthorized') {\r\n                    navigate('/login');\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchFormData();\r\n    }, []);\r\n\r\n    const changeHandle = (e, label) => {\r\n        const { value } = e.target;\r\n        setValues({ ...values, [label]: value });\r\n    };\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        let data = [];\r\n        data.push(values);\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const response = await fetch(CreateResponseFormAPI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                answers: data,\r\n                userId: user.userId,\r\n                formId: user.formId,\r\n            }),\r\n        });\r\n        const responseForm = await response.json();\r\n        if (!responseForm.status) {\r\n            toast.error(responseForm.message, toastOptions);\r\n        } else {\r\n            toast.success(responseForm.message, toastOptions);\r\n            console.log(responseForm);\r\n        }\r\n\r\n        // console.log(data);\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}