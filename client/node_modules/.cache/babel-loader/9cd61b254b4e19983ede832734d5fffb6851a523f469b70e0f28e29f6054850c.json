{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heret\\\\OneDrive\\\\Desktop\\\\api\\\\frontend-google-form\\\\src\\\\components\\\\pages\\\\FormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { PlusCircleIcon } from '@heroicons/react/outline';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { CreateFormAPI, GetUserAPI } from '../../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormPage(_ref) {\n  _s();\n  let {\n    setFormData\n  } = _ref;\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    pauseOnHover: true,\n    theme: 'colored',\n    draggable: true\n  };\n  const [title, setTitle] = useState('Untitled Form');\n  const [description, setDescription] = useState('Form Description');\n  const [formContent, setFormContent] = useState([{\n    id: 0,\n    name: '0',\n    label: 'Untitled Question',\n    required: false,\n    question_type: 'short_answer',\n    list: []\n  }]);\n  const [onEdit, setOnEdit] = useState(false);\n  const [textField, setTextField] = useState('');\n  const [editedField, setEditedField] = useState('');\n\n  // let user;\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      navigate('/login');\n    }\n  });\n  const addQuestion = () => {\n    const field = {\n      name: `question_${formContent.length}`,\n      label: 'Untitled question',\n      required: false,\n      question_type: 'short_answer',\n      // \"paragraph\", \"multichoice\",\n      list: [],\n      value: ''\n    };\n    setFormContent([...formContent, field]);\n  };\n  const editField = (fieldName, fieldLabel) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      formFields[fieldIndex].label = fieldLabel;\n      setFormContent(formFields);\n    }\n  };\n  const editFieldType = (fieldName, fieldLabel) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      formFields[fieldIndex].question_type = fieldLabel;\n      setFormContent(formFields);\n    }\n  };\n  const addFieldOption = (fieldName, option) => {\n    const formFields = [...formContent];\n    const fieldIndex = formFields.findIndex(f => f.name === fieldName);\n    if (fieldIndex > -1) {\n      if (option && option != '') {\n        formFields[fieldIndex].list.push(option);\n        setFormContent(formFields);\n        setTextField('');\n      }\n    }\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      navigate('/login');\n    }\n    const response = await fetch(CreateFormAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        formFields: formContent,\n        userId: user.userId\n      })\n    });\n    const data = await response.json();\n    if (data.status === true) {\n      setFormData(data);\n      navigate('/response-form');\n      user.formId = data.form._id;\n      localStorage.setItem('user', JSON.stringify(user));\n      toast.success(data.message, toastOptions);\n    } else {\n      toast.error(data.message, toastOptions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto                                                                                                                    flex flex-col justify-start items-center px-4 h-screen w-4/5 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col px-4 bg-white rounded-md justify-center item-start w-full shadow-sm border-indigo-800 border-t-8 space-y-2 h-24\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-3xl font-semibold\",\n        placeholder: \"\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-gray-500/80  capitalize\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" relative flex flex-col w-full space-y-4\",\n      children: [formContent.map(field => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-md bg-white flex w-full shadow-md px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"block text-sm font-medium text-gray-700 capitalize\",\n                children: onEdit && editedField === field.name ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"border border-black\",\n                  value: field.label,\n                  onChange: e => editField(field.name, e.target.value),\n                  onBlur: () => {\n                    setOnEdit(false);\n                    setEditedField('');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  onClick: () => {\n                    setOnEdit(true);\n                    setEditedField(field.name);\n                  },\n                  children: field.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 45\n                }, this)\n              }, field.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => editFieldType(field.name, e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"short_answer\",\n                    children: \"Short Answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"paragraph\",\n                    children: \"Paragraph\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"multichoice\",\n                    children: \"Multichoice\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-4 w-full\",\n              children: [field.question_type == 'short_answer' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                placeholder: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this), field.question_type == 'paragraph' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: 4,\n                className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                placeholder: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this), field.question_type == 'multichoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-4 flex flex-col space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"px-5 shadow-sm h-10 rounded-md block w-full\",\n                  children: field.list.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item,\n                    children: item\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    onChange: e => setTextField(e.target.value),\n                    value: textField,\n                    placeholder: \"Add an option\",\n                    className: \"flex-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"bg-indigo-700 block hover:bg-indigo-900 text-white px-4\",\n                    onClick: () => addFieldOption(field.name, textField),\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, field.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" absolute space-y-1 top-0 -right-16 flex flex-col justify-between items-center bg-white p-2 rounded-md shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addQuestion(),\n          children: /*#__PURE__*/_jsxDEV(PlusCircleIcon, {\n            className: \"w-8 h-8 text-gray-400 hover:text-indigo-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-indigo-600 px-4 py-2 hover:bg-indigo-700 rounded-md text-white\",\n        type: \"submit\",\n        onClick: e => submitForm(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-3 py-2 bg-red-700 hover:bg-red-800 rounded-md text-white\",\n      onClick: () => {\n        localStorage.removeItem('user');\n        navigate('/login');\n      },\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(FormPage, \"tXZkXshILM3vAuD3urfPk0OTgck=\", false, function () {\n  return [useNavigate];\n});\n_c = FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","PlusCircleIcon","toast","ToastContainer","CreateFormAPI","GetUserAPI","jsxDEV","_jsxDEV","FormPage","_ref","_s","setFormData","navigate","toastOptions","position","autoClose","pauseOnHover","theme","draggable","title","setTitle","description","setDescription","formContent","setFormContent","id","name","label","required","question_type","list","onEdit","setOnEdit","textField","setTextField","editedField","setEditedField","user","JSON","parse","localStorage","getItem","addQuestion","field","length","value","editField","fieldName","fieldLabel","formFields","fieldIndex","findIndex","f","editFieldType","addFieldOption","option","push","submitForm","e","preventDefault","response","fetch","method","headers","Authorization","token","body","stringify","userId","data","json","status","formId","form","_id","setItem","success","message","error","className","children","type","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onBlur","onClick","rows","item","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/heret/OneDrive/Desktop/api/frontend-google-form/src/components/pages/FormPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { PlusCircleIcon } from '@heroicons/react/outline';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CreateFormAPI, GetUserAPI } from '../../utils/APIRoutes';\r\n\r\nexport default function FormPage({ setFormData }) {\r\n    const navigate = useNavigate();\r\n    const toastOptions = {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        pauseOnHover: true,\r\n        theme: 'colored',\r\n        draggable: true,\r\n    };\r\n    const [title, setTitle] = useState('Untitled Form');\r\n    const [description, setDescription] = useState('Form Description');\r\n    const [formContent, setFormContent] = useState([\r\n        {\r\n            id: 0,\r\n            name: '0',\r\n            label: 'Untitled Question',\r\n            required: false,\r\n            question_type: 'short_answer',\r\n            list: [],\r\n        },\r\n    ]);\r\n    const [onEdit, setOnEdit] = useState(false);\r\n    const [textField, setTextField] = useState('');\r\n    const [editedField, setEditedField] = useState('');\r\n\r\n    // let user;\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n            navigate('/login');\r\n        }\r\n    });\r\n\r\n    const addQuestion = () => {\r\n        const field = {\r\n            name: `question_${formContent.length}`,\r\n            label: 'Untitled question',\r\n            required: false,\r\n            question_type: 'short_answer', // \"paragraph\", \"multichoice\",\r\n            list: [],\r\n            value: '',\r\n        };\r\n        setFormContent([...formContent, field]);\r\n    };\r\n\r\n    const editField = (fieldName, fieldLabel) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            formFields[fieldIndex].label = fieldLabel;\r\n            setFormContent(formFields);\r\n        }\r\n    };\r\n\r\n    const editFieldType = (fieldName, fieldLabel) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            formFields[fieldIndex].question_type = fieldLabel;\r\n            setFormContent(formFields);\r\n        }\r\n    };\r\n\r\n    const addFieldOption = (fieldName, option) => {\r\n        const formFields = [...formContent];\r\n        const fieldIndex = formFields.findIndex((f) => f.name === fieldName);\r\n        if (fieldIndex > -1) {\r\n            if (option && option != '') {\r\n                formFields[fieldIndex].list.push(option);\r\n                setFormContent(formFields);\r\n                setTextField('');\r\n            }\r\n        }\r\n    };\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n            navigate('/login');\r\n        }\r\n\r\n        const response = await fetch(CreateFormAPI, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${user.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title,\r\n                description,\r\n                formFields: formContent,\r\n                userId: user.userId,\r\n            }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.status === true) {\r\n            setFormData(data);\r\n            navigate('/response-form');\r\n            user.formId = data.form._id;\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            toast.success(data.message, toastOptions);\r\n        } else {\r\n            toast.error(data.message, toastOptions);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container mx-auto                                                                                                                    flex flex-col justify-start items-center px-4 h-screen w-4/5 space-y-4\">\r\n            <div className=\"flex flex-col px-4 bg-white rounded-md justify-center item-start w-full shadow-sm border-indigo-800 border-t-8 space-y-2 h-24\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"text-3xl font-semibold\"\r\n                    placeholder=\"\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"text-gray-500/80  capitalize\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\" relative flex flex-col w-full space-y-4\">\r\n                {formContent.map((field) => {\r\n                    return (\r\n                        <div\r\n                            key={field.name}\r\n                            className=\"rounded-md bg-white flex w-full shadow-md px-4\"\r\n                        >\r\n                            <div className=\"flex flex-col w-full\">\r\n                                <div className=\"flex justify-between items-center space-y-2\">\r\n                                    <div\r\n                                        key={field.name}\r\n                                        className=\"block text-sm font-medium text-gray-700 capitalize\"\r\n                                    >\r\n                                        {onEdit &&\r\n                                        editedField === field.name ? (\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"border border-black\"\r\n                                                value={field.label}\r\n                                                onChange={(e) =>\r\n                                                    editField(\r\n                                                        field.name,\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                                onBlur={() => {\r\n                                                    setOnEdit(false);\r\n                                                    setEditedField('');\r\n                                                }}\r\n                                            />\r\n                                        ) : (\r\n                                            <label\r\n                                                onClick={() => {\r\n                                                    setOnEdit(true);\r\n                                                    setEditedField(field.name);\r\n                                                }}\r\n                                            >\r\n                                                {field.label}\r\n                                            </label>\r\n                                        )}\r\n                                    </div>\r\n                                    <div>\r\n                                        <select\r\n                                            onChange={(e) =>\r\n                                                editFieldType(\r\n                                                    field.name,\r\n                                                    e.target.value\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <option value=\"short_answer\">\r\n                                                Short Answer\r\n                                            </option>\r\n                                            <option value=\"paragraph\">\r\n                                                Paragraph\r\n                                            </option>\r\n                                            <option value=\"multichoice\">\r\n                                                Multichoice\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"my-4 w-full\">\r\n                                    {field.question_type == 'short_answer' && (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"px-5 shadow-sm h-10 rounded-md block w-full\"\r\n                                            placeholder={field.label}\r\n                                        />\r\n                                    )}\r\n                                    {field.question_type == 'paragraph' && (\r\n                                        <textarea\r\n                                            rows={4}\r\n                                            className=\"px-5 shadow-sm h-10 rounded-md block w-full\"\r\n                                            placeholder={field.label}\r\n                                        />\r\n                                    )}\r\n                                    {field.question_type == 'multichoice' && (\r\n                                        <div className=\"my-4 flex flex-col space-y-2\">\r\n                                            <select className=\"px-5 shadow-sm h-10 rounded-md block w-full\">\r\n                                                {field.list.map((item) => (\r\n                                                    <option\r\n                                                        key={item}\r\n                                                        value={item}\r\n                                                    >\r\n                                                        {item}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            <div className=\"flex space-between\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={(e) =>\r\n                                                        setTextField(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    value={textField}\r\n                                                    placeholder=\"Add an option\"\r\n                                                    className=\"flex-1\"\r\n                                                />\r\n                                                <button\r\n                                                    className=\"bg-indigo-700 block hover:bg-indigo-900 text-white px-4\"\r\n                                                    onClick={() =>\r\n                                                        addFieldOption(\r\n                                                            field.name,\r\n                                                            textField\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    Add\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div className=\" absolute space-y-1 top-0 -right-16 flex flex-col justify-between items-center bg-white p-2 rounded-md shadow-md\">\r\n                    <button onClick={() => addQuestion()}>\r\n                        <PlusCircleIcon className=\"w-8 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                    </button>\r\n                    {/* <button onClick={() => addQuestion()}>\r\n                        <PlusCircleIcon className=\"w-8 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                    </button>\r\n                    <button onClick={() => addQuestion()}>\r\n                        <PlusCircleIcon className=\"w-8 h-8 text-gray-400 hover:text-indigo-500\" />\r\n                    </button> */}\r\n                </div>\r\n                <button\r\n                    className=\"bg-indigo-600 px-4 py-2 hover:bg-indigo-700 rounded-md text-white\"\r\n                    type=\"submit\"\r\n                    onClick={(e) => submitForm(e)}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n            <button\r\n                className=\"px-3 py-2 bg-red-700 hover:bg-red-800 rounded-md text-white\"\r\n                onClick={() => {\r\n                    localStorage.removeItem('user');\r\n                    navigate('/login');\r\n                }}\r\n            >\r\n                LOGOUT\r\n            </button>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,aAAa,EAAEC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC5C,MAAMG,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,YAAY,GAAG;IACjBC,QAAQ,EAAE,cAAc;IACxBC,SAAS,EAAE,IAAI;IACfC,YAAY,EAAE,IAAI;IAClBC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE;EACf,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,eAAe,CAAC;EACnD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,kBAAkB,CAAC;EAClE,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,CAC3C;IACI2B,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,GAAG;IACTC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,KAAK;IACfC,aAAa,EAAE,cAAc;IAC7BC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMwC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,EAAE;MACPzB,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,CAAC;EAEF,MAAM8B,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG;MACVjB,IAAI,EAAG,YAAWH,WAAW,CAACqB,MAAO,EAAC;MACtCjB,KAAK,EAAE,mBAAmB;MAC1BC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE,cAAc;MAAE;MAC/BC,IAAI,EAAE,EAAE;MACRe,KAAK,EAAE;IACX,CAAC;IACDrB,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEoB,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMG,SAAS,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IACzC,MAAMC,UAAU,GAAG,CAAC,GAAG1B,WAAW,CAAC;IACnC,MAAM2B,UAAU,GAAGD,UAAU,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAAC1B,IAAI,KAAKqB,SAAS,CAAC;IACpE,IAAIG,UAAU,GAAG,CAAC,CAAC,EAAE;MACjBD,UAAU,CAACC,UAAU,CAAC,CAACvB,KAAK,GAAGqB,UAAU;MACzCxB,cAAc,CAACyB,UAAU,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMI,aAAa,GAAGA,CAACN,SAAS,EAAEC,UAAU,KAAK;IAC7C,MAAMC,UAAU,GAAG,CAAC,GAAG1B,WAAW,CAAC;IACnC,MAAM2B,UAAU,GAAGD,UAAU,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAAC1B,IAAI,KAAKqB,SAAS,CAAC;IACpE,IAAIG,UAAU,GAAG,CAAC,CAAC,EAAE;MACjBD,UAAU,CAACC,UAAU,CAAC,CAACrB,aAAa,GAAGmB,UAAU;MACjDxB,cAAc,CAACyB,UAAU,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACP,SAAS,EAAEQ,MAAM,KAAK;IAC1C,MAAMN,UAAU,GAAG,CAAC,GAAG1B,WAAW,CAAC;IACnC,MAAM2B,UAAU,GAAGD,UAAU,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAAC1B,IAAI,KAAKqB,SAAS,CAAC;IACpE,IAAIG,UAAU,GAAG,CAAC,CAAC,EAAE;MACjB,IAAIK,MAAM,IAAIA,MAAM,IAAI,EAAE,EAAE;QACxBN,UAAU,CAACC,UAAU,CAAC,CAACpB,IAAI,CAAC0B,IAAI,CAACD,MAAM,CAAC;QACxC/B,cAAc,CAACyB,UAAU,CAAC;QAC1Bf,YAAY,CAAC,EAAE,CAAC;MACpB;IACJ;EACJ,CAAC;EACD,MAAMuB,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMtB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAI,CAACJ,IAAI,EAAE;MACPzB,QAAQ,CAAC,QAAQ,CAAC;IACtB;IAEA,MAAMgD,QAAQ,GAAG,MAAMC,KAAK,CAACzD,aAAa,EAAE;MACxC0D,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAAS3B,IAAI,CAAC4B,KAAM;MACxC,CAAC;MACDC,IAAI,EAAE5B,IAAI,CAAC6B,SAAS,CAAC;QACjBhD,KAAK;QACLE,WAAW;QACX4B,UAAU,EAAE1B,WAAW;QACvB6C,MAAM,EAAE/B,IAAI,CAAC+B;MACjB,CAAC;IACL,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,EAAE;IAClC,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;MACtB5D,WAAW,CAAC0D,IAAI,CAAC;MACjBzD,QAAQ,CAAC,gBAAgB,CAAC;MAC1ByB,IAAI,CAACmC,MAAM,GAAGH,IAAI,CAACI,IAAI,CAACC,GAAG;MAC3BlC,YAAY,CAACmC,OAAO,CAAC,MAAM,EAAErC,IAAI,CAAC6B,SAAS,CAAC9B,IAAI,CAAC,CAAC;MAClDnC,KAAK,CAAC0E,OAAO,CAACP,IAAI,CAACQ,OAAO,EAAEhE,YAAY,CAAC;IAC7C,CAAC,MAAM;MACHX,KAAK,CAAC4E,KAAK,CAACT,IAAI,CAACQ,OAAO,EAAEhE,YAAY,CAAC;IAC3C;EACJ,CAAC;EACD,oBACIN,OAAA;IAAKwE,SAAS,EAAC,6MAA6M;IAAAC,QAAA,gBACxNzE,OAAA;MAAKwE,SAAS,EAAC,+HAA+H;MAAAC,QAAA,gBAC1IzE,OAAA;QACI0E,IAAI,EAAC,MAAM;QACXF,SAAS,EAAC,wBAAwB;QAClCG,WAAW,EAAC,EAAE;QACdrC,KAAK,EAAE1B,KAAM;QACbgE,QAAQ,EAAGzB,CAAC,IAAKtC,QAAQ,CAACsC,CAAC,CAAC0B,MAAM,CAACvC,KAAK;MAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C,eACFjF,OAAA;QACI0E,IAAI,EAAC,MAAM;QACXF,SAAS,EAAC,8BAA8B;QACxClC,KAAK,EAAExB,WAAY;QACnB8D,QAAQ,EAAGzB,CAAC,IAAKpC,cAAc,CAACoC,CAAC,CAAC0B,MAAM,CAACvC,KAAK;MAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eAENjF,OAAA;MAAKwE,SAAS,EAAC,0CAA0C;MAAAC,QAAA,GACpDzD,WAAW,CAACkE,GAAG,CAAE9C,KAAK,IAAK;QACxB,oBACIpC,OAAA;UAEIwE,SAAS,EAAC,gDAAgD;UAAAC,QAAA,eAE1DzE,OAAA;YAAKwE,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACjCzE,OAAA;cAAKwE,SAAS,EAAC,6CAA6C;cAAAC,QAAA,gBACxDzE,OAAA;gBAEIwE,SAAS,EAAC,oDAAoD;gBAAAC,QAAA,EAE7DjD,MAAM,IACPI,WAAW,KAAKQ,KAAK,CAACjB,IAAI,gBACtBnB,OAAA;kBACI0E,IAAI,EAAC,MAAM;kBACXF,SAAS,EAAC,qBAAqB;kBAC/BlC,KAAK,EAAEF,KAAK,CAAChB,KAAM;kBACnBwD,QAAQ,EAAGzB,CAAC,IACRZ,SAAS,CACLH,KAAK,CAACjB,IAAI,EACVgC,CAAC,CAAC0B,MAAM,CAACvC,KAAK,CAErB;kBACD6C,MAAM,EAAEA,CAAA,KAAM;oBACV1D,SAAS,CAAC,KAAK,CAAC;oBAChBI,cAAc,CAAC,EAAE,CAAC;kBACtB;gBAAE;kBAAAiD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACJ,gBAEFjF,OAAA;kBACIoF,OAAO,EAAEA,CAAA,KAAM;oBACX3D,SAAS,CAAC,IAAI,CAAC;oBACfI,cAAc,CAACO,KAAK,CAACjB,IAAI,CAAC;kBAC9B,CAAE;kBAAAsD,QAAA,EAEDrC,KAAK,CAAChB;gBAAK;kBAAA0D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAEnB,GA7BI7C,KAAK,CAACjB,IAAI;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QA8Bb,eACNjF,OAAA;gBAAAyE,QAAA,eACIzE,OAAA;kBACI4E,QAAQ,EAAGzB,CAAC,IACRL,aAAa,CACTV,KAAK,CAACjB,IAAI,EACVgC,CAAC,CAAC0B,MAAM,CAACvC,KAAK,CAErB;kBAAAmC,QAAA,gBAEDzE,OAAA;oBAAQsC,KAAK,EAAC,cAAc;oBAAAmC,QAAA,EAAC;kBAE7B;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS,eACTjF,OAAA;oBAAQsC,KAAK,EAAC,WAAW;oBAAAmC,QAAA,EAAC;kBAE1B;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS,eACTjF,OAAA;oBAAQsC,KAAK,EAAC,aAAa;oBAAAmC,QAAA,EAAC;kBAE5B;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACJ;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACP;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACJ,eAENjF,OAAA;cAAKwE,SAAS,EAAC,aAAa;cAAAC,QAAA,GACvBrC,KAAK,CAACd,aAAa,IAAI,cAAc,iBAClCtB,OAAA;gBACI0E,IAAI,EAAC,MAAM;gBACXF,SAAS,EAAC,6CAA6C;gBACvDG,WAAW,EAAEvC,KAAK,CAAChB;cAAM;gBAAA0D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAEhC,EACA7C,KAAK,CAACd,aAAa,IAAI,WAAW,iBAC/BtB,OAAA;gBACIqF,IAAI,EAAE,CAAE;gBACRb,SAAS,EAAC,6CAA6C;gBACvDG,WAAW,EAAEvC,KAAK,CAAChB;cAAM;gBAAA0D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAEhC,EACA7C,KAAK,CAACd,aAAa,IAAI,aAAa,iBACjCtB,OAAA;gBAAKwE,SAAS,EAAC,8BAA8B;gBAAAC,QAAA,gBACzCzE,OAAA;kBAAQwE,SAAS,EAAC,6CAA6C;kBAAAC,QAAA,EAC1DrC,KAAK,CAACb,IAAI,CAAC2D,GAAG,CAAEI,IAAI,iBACjBtF,OAAA;oBAEIsC,KAAK,EAAEgD,IAAK;oBAAAb,QAAA,EAEXa;kBAAI,GAHAA,IAAI;oBAAAR,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAKhB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACG,eACTjF,OAAA;kBAAKwE,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,gBAC/BzE,OAAA;oBACI0E,IAAI,EAAC,MAAM;oBACXE,QAAQ,EAAGzB,CAAC,IACRxB,YAAY,CACRwB,CAAC,CAAC0B,MAAM,CAACvC,KAAK,CAErB;oBACDA,KAAK,EAAEZ,SAAU;oBACjBiD,WAAW,EAAC,eAAe;oBAC3BH,SAAS,EAAC;kBAAQ;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QACpB,eACFjF,OAAA;oBACIwE,SAAS,EAAC,yDAAyD;oBACnEY,OAAO,EAAEA,CAAA,KACLrC,cAAc,CACVX,KAAK,CAACjB,IAAI,EACVO,SAAS,CAEhB;oBAAA+C,QAAA,EACJ;kBAED;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAS;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAEb;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACJ,GAjHD7C,KAAK,CAACjB,IAAI;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAkHb;MAEd,CAAC,CAAC,eACFjF,OAAA;QAAKwE,SAAS,EAAC,kHAAkH;QAAAC,QAAA,eAC7HzE,OAAA;UAAQoF,OAAO,EAAEA,CAAA,KAAMjD,WAAW,EAAG;UAAAsC,QAAA,eACjCzE,OAAA,CAACN,cAAc;YAAC8E,SAAS,EAAC;UAA6C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACrE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOP,eACNjF,OAAA;QACIwE,SAAS,EAAC,mEAAmE;QAC7EE,IAAI,EAAC,QAAQ;QACbU,OAAO,EAAGjC,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;QAAAsB,QAAA,EACjC;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,eACNjF,OAAA;MACIwE,SAAS,EAAC,6DAA6D;MACvEY,OAAO,EAAEA,CAAA,KAAM;QACXnD,YAAY,CAACsD,UAAU,CAAC,MAAM,CAAC;QAC/BlF,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAE;MAAAoE,QAAA,EACL;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTjF,OAAA,CAACJ,cAAc;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEd;AAAC9E,EAAA,CAnRuBF,QAAQ;EAAA,QACXR,WAAW;AAAA;AAAA+F,EAAA,GADRvF,QAAQ;AAAA,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}